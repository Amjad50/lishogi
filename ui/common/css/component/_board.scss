.main-board {
  @extend %square;
  &__preload {
    position: absolute;
  }
  .cg-wrap {
    @extend %abs-100;
  }
}

.mini-board.no-pockets {
  @extend %square;
  cg-helper {
    bottom: 0;
  }
}

.mini-board {
  @extend %mini-board-square;
  cg-helper {
    bottom: calc(100% / 11);
  }
  cg-pocket {
    .pocket {
      &-top {
        grid-area: mat-top;
        border-radius: 3px 3px 0px 0px;
      }
      &-bottom {
        grid-area: mat-bot;
        border-radius: 0px 0px 3px 3px;
        position: absolute;
        width: 100%;
        top: calc(100% * 10/11);
      }
      @include breakpoint($mq-col2-uniboard) {
        &-top {
          // margin-bottom: $block-gap;

        }
        &-bottom {
          // margin-top: $block-gap;
        }
      }
      @extend %box-radius;
      display: flex;
      justify-content: center;
      @include breakpoint($mq-col2-uniboard) {
        width: 100%;
        box-shadow: 0 3px 5px rgba(0, 0, 0, 0.3) inset;
        @if $theme-light {
          background: #b3b3b3;
        } @else {
          background: #6b6b6b;
        }
      }
      &-c1 {
        display: flex;
        align-items: center;
        flex: 0 0 calc(100% / 9);
        max-width: 10vmin;
      }
      &-c2 {
        @extend %square;
      }
      piece {
        display: block;
        width: 100% !important;
        height: 100% !important;
        @include transition();
        &::after {
          @extend %active, %box-radius;
          content: attr(data-nb);
          bottom: 0;
          right: 0;
          position: absolute;
          line-height: 0.9em;
          padding: 3px 0.3em;
          font-weight: bold;
          font-size: 0.7em;
        }
        &[data-nb="0"] {
          cursor: auto;
          opacity: 0.1;
          &::after {
            content: none;
          }
        }
      }
      .blindfold &:not(.usable) {
        opacity: 0;
      }
    }
  }
}

.cg-wrap,
.mini-game .cg-wrap {
  display: table; // part of hack to round to full pixel size in chrome
}
