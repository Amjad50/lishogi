"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function default_1(serverKey) {
    const otp = randomAscii(64);
    window.lishogi.socket.send('sk1', `${serverKey}!${otp}`);
    return new Promise(solve => window.lishogi.pubsub.on('socket.in.sk1', encrypted => solve(xor(encrypted, otp))));
}
exports.default = default_1;
function xor(a, b) {
    const result = [];
    for (let i = 0; i < a.length; i++)
        result.push(String.fromCharCode(a.charCodeAt(i) ^ b.charCodeAt(i)));
    return result.join('');
}
function randomAscii(length) {
    const result = [];
    // start after '!' which is used as delimiter
    for (let i = 0; i < length; i++)
        result.push(String.fromCharCode(34 + Math.floor(Math.random() * 92)));
    return result.join('');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNyYy9zaWduLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbUJBQXlCLFNBQWlCO0lBQ3hDLE1BQU0sR0FBRyxHQUFHLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM1QixNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEdBQUcsU0FBUyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDekQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxlQUFlLEVBQUUsU0FBUyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsSCxDQUFDO0FBSkQsNEJBSUM7QUFFRCxTQUFTLEdBQUcsQ0FBQyxDQUFTLEVBQUUsQ0FBUztJQUMvQixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFDbEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFO1FBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdkcsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3pCLENBQUM7QUFFRCxTQUFTLFdBQVcsQ0FBQyxNQUFjO0lBQ2pDLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNsQiw2Q0FBNkM7SUFDN0MsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sRUFBRSxDQUFDLEVBQUU7UUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RyxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDekIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChzZXJ2ZXJLZXk6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gIGNvbnN0IG90cCA9IHJhbmRvbUFzY2lpKDY0KTtcbiAgd2luZG93Lmxpc2hvZ2kuc29ja2V0LnNlbmQoJ3NrMScsIGAke3NlcnZlcktleX0hJHtvdHB9YCk7XG4gIHJldHVybiBuZXcgUHJvbWlzZShzb2x2ZSA9PiB3aW5kb3cubGlzaG9naS5wdWJzdWIub24oJ3NvY2tldC5pbi5zazEnLCBlbmNyeXB0ZWQgPT4gc29sdmUoeG9yKGVuY3J5cHRlZCwgb3RwKSkpKTtcbn1cblxuZnVuY3Rpb24geG9yKGE6IHN0cmluZywgYjogc3RyaW5nKSB7XG4gIGNvbnN0IHJlc3VsdCA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHJlc3VsdC5wdXNoKFN0cmluZy5mcm9tQ2hhckNvZGUoYS5jaGFyQ29kZUF0KGkpIF4gYi5jaGFyQ29kZUF0KGkpKSk7XG4gIHJldHVybiByZXN1bHQuam9pbignJyk7XG59XG5cbmZ1bmN0aW9uIHJhbmRvbUFzY2lpKGxlbmd0aDogbnVtYmVyKSB7XG4gIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAvLyBzdGFydCBhZnRlciAnIScgd2hpY2ggaXMgdXNlZCBhcyBkZWxpbWl0ZXJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgcmVzdWx0LnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZSgzNCArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDkyKSkpO1xuICByZXR1cm4gcmVzdWx0LmpvaW4oJycpO1xufVxuIl19